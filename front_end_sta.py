# -*- coding: utf-8 -*-
"""Front end STA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NCFwqRmM41BOAh1BT6yjJdXmL5etRUbi
"""

import streamlit as st
import pandas as pd
from backend import obtener_intro_gpt, obtener_noticias_gnews, obtener_noticias_mediastack, clasificar_riesgo_gpt

# --- CONFIGURACI칍N DE LA P츼GINA ---
st.set_page_config(page_title="An치lisis de Proveedores", layout="wide")

# --- T칈TULO ---
st.title("游댌 An치lisis de Riesgos para Proveedores")
st.markdown("Analiza riesgos asociados a proveedores basados en noticias de fuentes p칰blicas.")

# --- B칔SQUEDA DE PROVEEDOR ---
proveedor = st.text_input("Introduce el nombre del proveedor a buscar:", "")
buscar = st.button("Buscar")

# --- AN츼LISIS ---
if buscar and proveedor:
    # Introducci칩n
    st.subheader("游늯 Introducci칩n del Proveedor")
    intro = obtener_intro_gpt(proveedor)
    st.write(intro)

    # Obtener noticias
    noticias_gnews = obtener_noticias_gnews(proveedor)
    noticias_mediastack = obtener_noticias_mediastack(proveedor)
    resultados = pd.concat([noticias_gnews, noticias_mediastack]).drop_duplicates().reset_index(drop=True)

    if resultados.empty:
        st.warning("No se encontraron noticias.")
    else:
        # Clasificar riesgos
        resultados['riesgo'] = resultados['contenido'].fillna('').apply(lambda x: clasificar_riesgo_gpt(x[:500]))
        st.subheader("游늵 Resultados del An치lisis")
        st.dataframe(resultados[['titulo', 'url', 'riesgo']])

        # Descargar resultados
        archivo_csv = "resultados_riesgos.csv"
        resultados[['titulo', 'url', 'riesgo']].to_csv(archivo_csv, index=False)
        st.download_button(label="游닌 Descargar Resultados", data=open(archivo_csv, "rb"), file_name=archivo_csv)